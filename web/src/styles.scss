// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;


// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();
@import "/src/theme/theme.scss";
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$web-primary: mat.define-palette($primary-palette, 500);
$web-accent: mat.define-palette($secondary-palette, 500);
$web-warn: mat.define-palette(mat.$red-palette);
$web-test: mat.define-palette(mat.$red-palette);



// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$my-typography: mat.define-typography-config($font-family: 'Poppins',
  );
$web-theme: mat.define-light-theme((color: (primary: $web-primary,
        accent: $web-accent,
        warn: $web-warn ),
    ));


// Now we have sweet buttons with Comic Sans.


// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($web-theme);
@include mat.typography-hierarchy($my-typography);

/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;
}

body {
  margin: 0;
}

//Pharagraph
p {
  font-size: 1.1em;
}

//snackbars
.mat-mdc-snack-bar-container {
  &.snackSuccess {
    --mdc-snackbar-container-color: var(--ion-color-success);
    --mat-mdc-snack-bar-button-color: var(--ion-color-dark);
    --mdc-snackbar-supporting-text-color: var(--ion-color-dark);
  }
  &.snackDanger {
    --mdc-snackbar-container-color: var(--ion-color-danger);
    --mat-mdc-snack-bar-button-color: var(--ion-color-light);
    --mdc-snackbar-supporting-text-color: var(--ion-color-light);
  }
}

//typography

.font-dark {
  color: var(--ion-color-dark);
}

.font-primary {
  color: var(--ion-color-primary);
}

.font-white {
  color: white;
}


h1 {
  font-size: 3.2em !important;
  font-weight: 600 !important;
  line-height: 1.1 !important;
}

.title-1 {
  font-size: 3em;
  font-weight: 600;
  line-height: 1.1;
}

h2 {
  font-size: 2.5em;
  font-weight: 600;
  line-height: 1.1;
}

.title-2 {
  font-size: 2.5em;
  font-weight: 600;
  line-height: 1.1;
}

h3 {
  font-size: 1.5em;
  font-weight: 600;
  line-height: 1.1;
}

.title-3 {
  font-size: 1.5em;
  font-weight: 600;
  line-height: 1.1;
}

.title-4 {
  font-size: 1.3em;
  font-weight: 600;
  line-height: 1.1;
}

.subtitle-1 {
  font-size: 1.1em;
  font-weight: 600;
}

.subtitle-3 {
  font-size: 1.3em;
  font-weight: 600;
}


//Components

.card-box {
  box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;

  .card-content {
    margin: 20px;
  }
}

//spinner button
@keyframes spinner {
  to {
    transform: rotate(360deg);
  }
}

.spinner:before {
  content: '';
  box-sizing: border-box;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 20px;
  height: 20px;
  margin-top: -10px;
  margin-left: -10px;
  border-radius: 50%;
  border: 2px solid #ffffff;
  border-top-color: #000000;
  animation: spinner .8s linear infinite;
}